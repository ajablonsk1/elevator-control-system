{"ast":null,"code":"var _jsxFileName = \"/Users/ajablonsk1/Desktop/projects/elevator-system/frontend/src/components/UpdateElevatorForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Form } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport Api from \"./Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateElevatorForm = () => {\n  _s();\n\n  const floors = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n  const [currentFloor, setCurrentFloor] = useState('');\n  const [destinationFloor, setDestinationFloor] = useState('');\n  const [elevators, setElevators] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    Api.get(\"/api/v1/elevators\").then(res => {\n      setElevators(res.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }, []);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    Api.put();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"w-50\",\n      style: {\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        marginTop: '20px'\n      },\n      onSubmit: onSubmit,\n      id: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Select elevator's id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          value: currentFloor,\n          onChange: e => setCurrentFloor(e.target.value),\n          children: elevators.map((elevator, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: elevator.id\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Current floor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          value: currentFloor,\n          onChange: e => setCurrentFloor(e.target.value),\n          children: floors.map((floor, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: floor\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Destination floor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          value: destinationFloor,\n          onChange: e => setDestinationFloor(e.target.value),\n          children: floors.map((floor, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: floor\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdateElevatorForm, \"lxUla6vbPxsC03NWyAerE+bT/FQ=\", false, function () {\n  return [useNavigate];\n});\n\n_c = UpdateElevatorForm;\nexport default UpdateElevatorForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateElevatorForm\");","map":{"version":3,"sources":["/Users/ajablonsk1/Desktop/projects/elevator-system/frontend/src/components/UpdateElevatorForm.js"],"names":["React","useState","useEffect","Button","Form","useNavigate","Api","UpdateElevatorForm","floors","currentFloor","setCurrentFloor","destinationFloor","setDestinationFloor","elevators","setElevators","navigate","get","then","res","data","catch","e","console","log","onSubmit","preventDefault","put","marginLeft","marginRight","marginTop","target","value","map","elevator","index","id","floor"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Button, Form} from \"react-bootstrap\";\nimport {useNavigate} from \"react-router-dom\";\nimport Api from \"./Api\";\n\nconst UpdateElevatorForm = () => {\n    const floors = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    const [currentFloor, setCurrentFloor] = useState('')\n    const [destinationFloor, setDestinationFloor] = useState('')\n    const [elevators, setElevators] = useState([])\n    const navigate = useNavigate()\n\n    useEffect(() => {\n        Api.get(\"/api/v1/elevators\"\n        ).then(res => {\n            setElevators(res.data)\n        }).catch((e) => {\n            console.log(e)\n        })\n    }, [])\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        Api.put()\n    }\n\n    return (\n        <div>\n            <Form\n                className=\"w-50\"\n                style={{ marginLeft: 'auto', marginRight: 'auto', marginTop: '20px' }}\n                onSubmit={onSubmit}\n                id='form'\n            >\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Select elevator's id</Form.Label>\n                    <Form.Select\n                        value={currentFloor}\n                        onChange={(e) => setCurrentFloor(e.target.value)}\n                    >\n                        {elevators.map((elevator, index) => (\n                            <option key={index}>{elevator.id}</option>\n                        ))}\n                    </Form.Select>\n                </Form.Group>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Current floor</Form.Label>\n                    <Form.Select\n                        value={currentFloor}\n                        onChange={(e) => setCurrentFloor(e.target.value)}\n                    >\n                        {floors.map((floor, index) => (\n                            <option key={index}>{floor}</option>\n                        ))}\n                    </Form.Select>\n                </Form.Group>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Destination floor</Form.Label>\n                    <Form.Select\n                        value={destinationFloor}\n                        onChange={(e) => setDestinationFloor(e.target.value)}>\n                        {floors.map((floor, index) => (\n                            <option key={index}>{floor}</option>\n                        ))}\n                    </Form.Select>\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\">\n                    Update\n                </Button>\n            </Form>\n        </div>\n    );\n};\n\nexport default UpdateElevatorForm;"]},"metadata":{},"sourceType":"module"}