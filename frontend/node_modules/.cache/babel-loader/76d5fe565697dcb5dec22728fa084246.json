{"ast":null,"code":"var _jsxFileName = \"/Users/ajablonsk1/Desktop/projects/elevator-system/frontend/src/components/AddElevatorForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport Api from './Api';\nimport useHistory from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddElevatorForm = () => {\n  _s();\n\n  const floors = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n  const [actualFloor, setActualFloor] = useState('');\n  const [destinationFloor, setDestinationFloor] = useState('');\n\n  const onSubmit = e => {\n    e.preventDefault();\n    Api.post(\"/api/v1/elevator\", {\n      actualFloor: actualFloor,\n      destinationFloor: destinationFloor,\n      floors: []\n    }).then(res => {\n      console.log(res.data);\n    }).catch(e => {\n      console.log(e);\n    });\n    useHistory.push;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"w-50\",\n      style: {\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        marginTop: '20px'\n      },\n      onSubmit: onSubmit,\n      id: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Actual floor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          value: actualFloor,\n          onChange: e => setActualFloor(e.target.value),\n          children: floors.map((floor, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: floor\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Destination floor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          value: destinationFloor,\n          onChange: e => setDestinationFloor(e.target.value),\n          children: floors.map((floor, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: floor\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddElevatorForm, \"YOe26EZyQj0tFIDbfsIsu//eppY=\");\n\n_c = AddElevatorForm;\nexport default _c2 = withRouter(AddElevatorForm);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddElevatorForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/ajablonsk1/Desktop/projects/elevator-system/frontend/src/components/AddElevatorForm.js"],"names":["React","useState","Form","Button","Api","useHistory","AddElevatorForm","floors","actualFloor","setActualFloor","destinationFloor","setDestinationFloor","onSubmit","e","preventDefault","post","then","res","console","log","data","catch","push","marginLeft","marginRight","marginTop","target","value","map","floor","index","withRouter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,IAAR,EAAcC,MAAd,QAA2B,iBAA3B;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC1B,QAAMC,MAAM,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,EAA/B,CAAf;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACS,gBAAD,EAAmBC,mBAAnB,IAA0CV,QAAQ,CAAC,EAAD,CAAxD;;AAEA,QAAMW,QAAQ,GAAIC,CAAD,IAAO;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACAV,IAAAA,GAAG,CAACW,IAAJ,CAAS,kBAAT,EAA6B;AACzBP,MAAAA,WAAW,EAAEA,WADY;AAEzBE,MAAAA,gBAAgB,EAAEA,gBAFO;AAGzBH,MAAAA,MAAM,EAAE;AAHiB,KAA7B,EAIGS,IAJH,CAIQC,GAAG,IAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACH,KAND,EAMGC,KANH,CAMUR,CAAD,IAAO;AACZK,MAAAA,OAAO,CAACC,GAAR,CAAYN,CAAZ;AACH,KARD;AASAR,IAAAA,UAAU,CAACiB,IAAX;AACH,GAZD;;AAcA,sBACI;AAAA,2BACI,QAAC,IAAD;AACI,MAAA,SAAS,EAAC,MADd;AAEI,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE,MAAd;AAAsBC,QAAAA,WAAW,EAAE,MAAnC;AAA2CC,QAAAA,SAAS,EAAE;AAAtD,OAFX;AAGI,MAAA,QAAQ,EAAEb,QAHd;AAII,MAAA,EAAE,EAAC,MAJP;AAAA,8BAMI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,MAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,MAAN;AACI,UAAA,KAAK,EAAEJ,WADX;AAEI,UAAA,QAAQ,EAAGK,CAAD,IAAOJ,cAAc,CAACI,CAAC,CAACa,MAAF,CAASC,KAAV,CAFnC;AAAA,oBAIKpB,MAAM,CAACqB,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBACR;AAAA,sBAAqBD;AAArB,aAAaC,KAAb;AAAA;AAAA;AAAA;AAAA,kBADH;AAJL;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAiBI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,MAAtB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,MAAN;AACI,UAAA,KAAK,EAAEpB,gBADX;AAEI,UAAA,QAAQ,EAAGG,CAAD,IAAOF,mBAAmB,CAACE,CAAC,CAACa,MAAF,CAASC,KAAV,CAFxC;AAAA,oBAGKpB,MAAM,CAACqB,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBACR;AAAA,sBAAqBD;AAArB,aAAaC,KAAb;AAAA;AAAA;AAAA;AAAA,kBADH;AAHL;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ,eA2BI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCH,CAtDD;;GAAMxB,e;;KAAAA,e;AAwDN,qBAAeyB,UAAU,CAACzB,eAAD,CAAzB","sourcesContent":["import React, {useState} from 'react';\nimport {Form, Button} from 'react-bootstrap'\nimport Api from './Api'\nimport useHistory from 'react-router-dom'\n\nconst AddElevatorForm = () => {\n    const floors = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    const [actualFloor, setActualFloor] = useState('')\n    const [destinationFloor, setDestinationFloor] = useState('')\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        Api.post(\"/api/v1/elevator\", {\n            actualFloor: actualFloor,\n            destinationFloor: destinationFloor,\n            floors: []\n        }).then(res => {\n            console.log(res.data)\n        }).catch((e) => {\n            console.log(e)\n        })\n        useHistory.push\n    }\n\n    return (\n        <div>\n            <Form\n                className=\"w-50\"\n                style={{ marginLeft: 'auto', marginRight: 'auto', marginTop: '20px' }}\n                onSubmit={onSubmit}\n                id='form'\n            >\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Actual floor</Form.Label>\n                    <Form.Select\n                        value={actualFloor}\n                        onChange={(e) => setActualFloor(e.target.value)}\n                    >\n                        {floors.map((floor, index) => (\n                            <option key={index}>{floor}</option>\n                        ))}\n                    </Form.Select>\n                </Form.Group>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Destination floor</Form.Label>\n                    <Form.Select\n                        value={destinationFloor}\n                        onChange={(e) => setDestinationFloor(e.target.value)}>\n                        {floors.map((floor, index) => (\n                            <option key={index}>{floor}</option>\n                        ))}\n                    </Form.Select>\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n            </Form>\n        </div>\n    );\n};\n\nexport default withRouter(AddElevatorForm);"]},"metadata":{},"sourceType":"module"}