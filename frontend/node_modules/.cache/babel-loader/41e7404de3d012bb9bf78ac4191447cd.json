{"ast":null,"code":"var _jsxFileName = \"/Users/ajablonsk1/Desktop/projects/elevator-system/frontend/src/components/Simulation.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport Api from './Api';\nimport { Button, Container, NavLink, Card, Row, Form, Navbar, Nav, FormControl, FormSelect, FormLabel } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Simulation = () => {\n  _s();\n\n  const floors = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n  const [elevators, setElevators] = useState([]);\n  const [orderedFloor, setOrderedFloor] = useState('');\n  const [direction, setDirection] = useState('');\n\n  const getElevatorsFromDb = () => {\n    Api.get(\"api/v1/elevators\").then(res => {\n      setElevators(res.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const setDirectionNumber = value => {\n    if (value === 'Up') {\n      setDirectionNumber(1);\n    } else if (value === 'Down') {\n      setDirectionNumber(-1);\n    }\n  };\n\n  const orderFloor = () => {};\n\n  useEffect(() => {\n    getElevatorsFromDb();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      bg: \"light\",\n      expand: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          href: \"/\",\n          children: \"Elevator system\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n          \"aria-controls\": \"basic-navbar-nav\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n          id: \"basic-navbar-nav\",\n          children: [/*#__PURE__*/_jsxDEV(Nav, {\n            className: \"me-auto\",\n            children: [/*#__PURE__*/_jsxDEV(NavLink, {\n              href: \"/addElevator\",\n              children: \"Add Elevator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n              href: \"/update\",\n              children: \"Update specific elevator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline-primary\",\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            className: \"d-flex\",\n            children: [/*#__PURE__*/_jsxDEV(FormSelect, {\n              placeholder: \"Select floor\",\n              className: \"me-2\",\n              value: orderedFloor,\n              onChange: e => setDirectionNumber(e.target.value),\n              children: floors.map((floor, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                children: floor\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormSelect, {\n              placeholder: \"Select floor\",\n              className: \"me-2\",\n              value: orderedFloor,\n              onChange: e => setOrderedFloor(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Down\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline-primary\",\n              children: \"Order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        xs: 1,\n        md: 4,\n        className: \"justify-content-md-center\",\n        children: elevators.map((elevator, index) => /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '18rem',\n            margin: \"10px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Elevator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n              className: \"mb-2 text-muted\",\n              children: [\"ID: \", elevator.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Current floor: \", elevator.currentFloor]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Destination floor: \", elevator.destinationFloor]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Floors to stop:\", elevator.floors.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: elevator.floors.map((floor, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [floor, \"; \"]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 37\n                }, this))\n              }, void 0, false) : /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \" None\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Simulation, \"wxMwExDJDsBNMVyr+Di2T38IFOM=\");\n\n_c = Simulation;\nexport default Simulation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Simulation\");","map":{"version":3,"sources":["/Users/ajablonsk1/Desktop/projects/elevator-system/frontend/src/components/Simulation.js"],"names":["React","useState","useEffect","Api","Button","Container","NavLink","Card","Row","Form","Navbar","Nav","FormControl","FormSelect","FormLabel","Simulation","floors","elevators","setElevators","orderedFloor","setOrderedFloor","direction","setDirection","getElevatorsFromDb","get","then","res","data","catch","e","console","log","setDirectionNumber","value","orderFloor","target","map","floor","index","marginTop","elevator","width","margin","id","currentFloor","destinationFloor","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useState, useEffect} from 'react';\nimport Api from './Api'\nimport {\n    Button,\n    Container,\n    NavLink,\n    Card,\n    Row,\n    Form,\n    Navbar,\n    Nav,\n    FormControl,\n    FormSelect,\n    FormLabel\n} from \"react-bootstrap\";\n\nconst Simulation = () => {\n    const floors = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    const [elevators, setElevators] = useState([])\n    const [orderedFloor, setOrderedFloor] = useState('')\n    const [direction, setDirection] = useState('')\n\n    const getElevatorsFromDb = () => {\n        Api.get(\"api/v1/elevators\"\n        ).then(res => {\n            setElevators(res.data)\n        }).catch(e => {\n            console.log(e)\n        })\n    }\n\n    const setDirectionNumber = (value) => {\n        if(value === 'Up'){\n            setDirectionNumber(1)\n        } else if(value === 'Down'){\n            setDirectionNumber(-1)\n        }\n    }\n\n    const orderFloor = () => {\n\n    }\n\n    useEffect(() => {\n        getElevatorsFromDb()\n    }, [])\n\n    return (\n        <div>\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Container fluid>\n                    <Navbar.Brand href=\"/\">Elevator system</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"me-auto\">\n                            <NavLink href=\"/addElevator\">\n                                Add Elevator\n                            </NavLink>\n                            <NavLink href=\"/update\">Update specific elevator</NavLink>\n                            <Button variant=\"outline-primary\">Search</Button>\n                        </Nav>\n                        <Form className=\"d-flex\">\n                            <FormSelect\n                                placeholder=\"Select floor\"\n                                className=\"me-2\"\n                                value={orderedFloor}\n                                onChange={(e) => setDirectionNumber(e.target.value)}>\n\n                                {floors.map((floor, index) => (\n                                    <option key={index}>{floor}</option>\n                                ))}\n                            </FormSelect>\n                            <FormSelect\n                                placeholder=\"Select floor\"\n                                className=\"me-2\"\n                                value={orderedFloor}\n                                onChange={(e) => setOrderedFloor(e.target.value)}>\n                                <option>Up</option>\n                                <option>Down</option>\n                            </FormSelect>\n                            <Button variant=\"outline-primary\">Order</Button>\n                        </Form>\n                    </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    <Container style={{marginTop: \"20px\"}}>\n        <Row xs={1} md={4} className=\"justify-content-md-center\">\n            {elevators.map((elevator, index) => (\n                <Card key={index} style={{width: '18rem', margin: \"10px\"}}>\n                    <Card.Body>\n                        <Card.Title>Elevator</Card.Title>\n                        <Card.Subtitle className=\"mb-2 text-muted\">ID: {elevator.id}</Card.Subtitle>\n                        <Card.Text>Current floor: {elevator.currentFloor}</Card.Text>\n                        <Card.Text>Destination floor: {elevator.destinationFloor}</Card.Text>\n                        <Card.Text>Floors to stop:\n                            {elevator.floors.length > 0 ?\n                                <>{elevator.floors.map((floor, index) => (\n                                    <span key={index}>{floor}; </span>\n                                ))}</> :\n                                <span> None</span>\n                            }\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n            ))}\n        </Row>\n    </Container>\n</div>\n)\n    ;\n};\n\nexport default Simulation;"]},"metadata":{},"sourceType":"module"}