{"ast":null,"code":"var _jsxFileName = \"/Users/ajablonsk1/Desktop/projects/elevator-system/frontend/src/components/Simulation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport Api from './Api';\nimport { Button, Container, NavLink, Card, Row, Form, Navbar, Nav, FormSelect } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Simulation = () => {\n  _s();\n\n  const floors = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n  const [elevators, setElevators] = useState([]);\n  const [orderedFloor, setOrderedFloor] = useState('');\n  const [direction, setDirection] = useState('');\n  const [orderedFloorInElevator, setOrderedFloorInElevator] = useState('');\n\n  const getElevatorsFromDb = () => {\n    Api.get(\"api/v1/elevators\").then(res => {\n      setElevators(res.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const onOrderSubmit = e => {\n    e.preventDefault();\n    Api.post(\"/api/v1/order\", {\n      floor: orderedFloor,\n      direction: direction\n    }).then(res => {\n      console.log(res.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const onPerformStepClick = e => {\n    e.preventDefault();\n    Api.get(\"/api/v1/step\").then(res => {\n      setElevators(res.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const onOrderInElevator = e => {\n    Api.post(\"/api/v1/order/floor\", {\n      id: e.target.value,\n      floor: orderedFloorInElevator\n    }).then(res => {\n      console.log(res.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  useEffect(() => {\n    getElevatorsFromDb();\n    setOrderedFloor('0');\n    setDirection('Up');\n    setOrderedFloorInElevator('0');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      bg: \"light\",\n      expand: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          href: \"/\",\n          children: \"Elevator system\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n          \"aria-controls\": \"basic-navbar-nav\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n          id: \"basic-navbar-nav\",\n          children: [/*#__PURE__*/_jsxDEV(Nav, {\n            className: \"me-auto\",\n            children: [/*#__PURE__*/_jsxDEV(NavLink, {\n              href: \"/addElevator\",\n              children: \"Add Elevator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n              href: \"/update\",\n              children: \"Update specific elevator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline-primary\",\n              onClick: onPerformStepClick,\n              children: \"Perform step\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            className: \"d-flex\",\n            onSubmit: onOrderSubmit,\n            id: \"form\",\n            children: [/*#__PURE__*/_jsxDEV(FormSelect, {\n              placeholder: \"Select floor\",\n              className: \"me-2\",\n              value: orderedFloor,\n              onChange: e => setOrderedFloor(e.target.value),\n              children: floors.map((floor, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                children: floor\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormSelect, {\n              style: {\n                width: \"200%\"\n              },\n              placeholder: \"Select floor\",\n              className: \"me-2\",\n              value: direction,\n              onChange: e => setDirection(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Down\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline-primary\",\n              type: \"submit\",\n              children: \"Order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        xs: 1,\n        md: 4,\n        className: \"justify-content-md-center\",\n        children: elevators.map((elevator, index) => /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '18rem',\n            margin: \"10px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Elevator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n              className: \"mb-2 text-muted\",\n              children: [\"ID: \", elevator.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Current floor: \", elevator.currentFloor]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Destination floor: \", elevator.destinationFloor]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"Floors to stop:\", elevator.floors.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: elevator.floors.map((floor, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [floor, \"; \"]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 37\n                }, this))\n              }, void 0, false) : /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \" None\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              className: \"d-flex\",\n              onSubmit: onOrderInElevator,\n              id: \"form\",\n              children: [/*#__PURE__*/_jsxDEV(FormSelect, {\n                placeholder: \"Select floor\",\n                className: \"me-2\",\n                value: orderedFloor,\n                onChange: e => setOrderedFloorInElevator(e.target.value),\n                children: floors.map((floor, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: floor\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 37\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                value: elevator.id,\n                variant: \"outline-primary\",\n                type: \"submit\",\n                children: \"Order\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Simulation, \"QfWF+w7o/mySRlF9dzf3Ic5fbtE=\");\n\n_c = Simulation;\nexport default Simulation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Simulation\");","map":{"version":3,"sources":["/Users/ajablonsk1/Desktop/projects/elevator-system/frontend/src/components/Simulation.js"],"names":["React","useEffect","useState","Api","Button","Container","NavLink","Card","Row","Form","Navbar","Nav","FormSelect","Simulation","floors","elevators","setElevators","orderedFloor","setOrderedFloor","direction","setDirection","orderedFloorInElevator","setOrderedFloorInElevator","getElevatorsFromDb","get","then","res","data","catch","e","console","log","onOrderSubmit","preventDefault","post","floor","onPerformStepClick","onOrderInElevator","id","target","value","map","index","width","marginTop","elevator","margin","currentFloor","destinationFloor","length"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport {useState} from 'react';\nimport Api from './Api'\nimport {\n    Button,\n    Container,\n    NavLink,\n    Card,\n    Row,\n    Form,\n    Navbar,\n    Nav,\n    FormSelect,\n} from \"react-bootstrap\";\n\nconst Simulation = () => {\n    const floors = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    const [elevators, setElevators] = useState([])\n    const [orderedFloor, setOrderedFloor] = useState('')\n    const [direction, setDirection] = useState('')\n    const [orderedFloorInElevator, setOrderedFloorInElevator] = useState('')\n\n    const getElevatorsFromDb = () => {\n        Api.get(\"api/v1/elevators\"\n        ).then(res => {\n            setElevators(res.data)\n        }).catch(e => {\n            console.log(e)\n        })\n    }\n\n    const onOrderSubmit = (e) => {\n        e.preventDefault()\n        Api.post(\"/api/v1/order\", {\n            floor: orderedFloor,\n            direction: direction\n        }).then(res => {\n            console.log(res.data)\n        }).catch(e => {\n            console.log(e)\n        })\n    }\n\n    const onPerformStepClick = (e) => {\n        e.preventDefault()\n        Api.get(\"/api/v1/step\"\n        ).then(res => {\n            setElevators(res.data)\n        }).catch(e => {\n            console.log(e)\n        })\n    }\n\n    const onOrderInElevator = (e) => {\n        Api.post(\"/api/v1/order/floor\", {\n            id: e.target.value,\n            floor: orderedFloorInElevator\n        }).then(res => {\n            console.log(res.data)\n        }).catch(e => {\n            console.log(e)\n        })\n    }\n\n    useEffect(() => {\n        getElevatorsFromDb()\n        setOrderedFloor('0')\n        setDirection('Up')\n        setOrderedFloorInElevator('0')\n    }, [])\n\n    return (\n        <div>\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Container fluid>\n                    <Navbar.Brand href=\"/\">Elevator system</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"me-auto\">\n                            <NavLink href=\"/addElevator\">\n                                Add Elevator\n                            </NavLink>\n                            <NavLink href=\"/update\">Update specific elevator</NavLink>\n                            <Button variant=\"outline-primary\" onClick={onPerformStepClick}>Perform step</Button>\n                        </Nav>\n                        <Form className=\"d-flex\"\n                              onSubmit={onOrderSubmit}\n                              id=\"form\">\n                            <FormSelect\n                                placeholder=\"Select floor\"\n                                className=\"me-2\"\n                                value={orderedFloor}\n                                onChange={(e) => setOrderedFloor(e.target.value)}\n                            >\n                                    {floors.map((floor, index) => (\n                                        <option key={index}>{floor}</option>\n                                    ))}\n                            </FormSelect>\n                            <FormSelect\n                                style={{width: \"200%\"}}\n                                placeholder=\"Select floor\"\n                                className=\"me-2\"\n                                value={direction}\n                                onChange={(e) => setDirection(e.target.value)}>\n                                <option>Up</option>\n                                <option>Down</option>\n                            </FormSelect>\n                            <Button variant=\"outline-primary\" type=\"submit\">Order</Button>\n                        </Form>\n                    </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    <Container style={{marginTop: \"20px\"}}>\n        <Row xs={1} md={4} className=\"justify-content-md-center\">\n            {elevators.map((elevator, index) => (\n                <Card key={index} style={{width: '18rem', margin: \"10px\"}}>\n                    <Card.Body>\n                        <Card.Title>Elevator</Card.Title>\n                        <Card.Subtitle className=\"mb-2 text-muted\">ID: {elevator.id}</Card.Subtitle>\n                        <Card.Text>Current floor: {elevator.currentFloor}</Card.Text>\n                        <Card.Text>Destination floor: {elevator.destinationFloor}</Card.Text>\n                        <Card.Text>Floors to stop:\n                            {elevator.floors.length > 0 ?\n                                <>{elevator.floors.map((floor, index) => (\n                                    <span key={index}>{floor}; </span>\n                                ))}</> :\n                                <span> None</span>\n                            }\n                        </Card.Text>\n                        <Form className=\"d-flex\"\n                              onSubmit={onOrderInElevator}\n                              id=\"form\">\n                            <FormSelect\n                                placeholder=\"Select floor\"\n                                className=\"me-2\"\n                                value={orderedFloor}\n                                onChange={(e) => setOrderedFloorInElevator(e.target.value)}\n                            >\n                                {floors.map((floor, index) => (\n                                    <option key={index}>{floor}</option>\n                                ))}\n                            </FormSelect>\n                            <Button value={elevator.id} variant=\"outline-primary\" type=\"submit\">Order</Button>\n                        </Form>\n                    </Card.Body>\n                </Card>\n            ))}\n        </Row>\n    </Container>\n</div>\n)\n    ;\n};\n\nexport default Simulation;"]},"metadata":{},"sourceType":"module"}